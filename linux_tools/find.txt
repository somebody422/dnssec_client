
example for searching all python files for the string "str":
'find . -name '*.py' -exec grep --color 'str' {} \;

'find PATH EXPRESSION'

Expression is divided into "primaries" and "operators". primaries provide some condition on a file matching. Operators are just logical operators like and, not, or, all used to modify / tie together primaries


======  PRIMARIES:  ======

-name PATTERN:
true if the last component of the path (the filename) matches PATTERN

-path PATTERN:
true if the entire path matches PATTERN

-regex PATTERN:
true if the WHOLE PATH matches the provided regex

-type TYPE:
true if current file is type TYPE. TYPE can be:
b       block special
c       character special
d       directory
f       regular file
l       symbolic link
p       FIFO
s       socket

-newer FILE
true if current file is newer than FILE

-maxdepth N
always true. Limits depth of search to N

-iname, -ipath, -iregex, all like their "non-i" versions, but case insensitive when matching

-exec PROG [arg1 arg ...] ;
This is a fun one! true if PROG returns 0. rest of line until ';' is passed as args. Note that the semicolon may have to be escaped. the string '{}' will be replaced with the current path.
PROG is executed from the same directory that find is executed in. Note that arguments may not be further shell expanded!

-delete
always true. deletes matching paths
