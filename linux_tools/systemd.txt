
https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files

I often call scripts units or unit files


System service management has become a bit of a flame war, with lots of competing factions. Currently systemd is on top, so learn it


--------- some history: ---------

For a long time the two service managers have been SystemV and init (on BSD systems). Some tools like service make this easer.

Enter Upstart, then systemd. Now the are more competing systems than before.. it looks like debian/ubuntu use systemd so i will focus on that



--------- how it works? ---------------
The scripts live in /lib/systemd/system. Each describes startup/down, configuration, ect.

If you want to override one, put a link in /etc/systemd/system. The scripts here will get preference.

Each of these scripts is called a "unit file" or just a "unit". the unit can many different types, and the extension the unit file is the type: just a few examples are:
	service, socket, mount, swpa, path, ect..
The idea here is that units can be associated with some resource (a socket, mount, path..) and be notified/activated to deal with that resource when something happens.

Inside the unit (unit file / script), it is broken up into sections, each section having many "lhs = rhs" assignments. A few sections:
	[Unit] - meta information, other required/wanted units
	[Install] - wanted and required by info
	[Service], [Socket], [Mount], ect.. - These are specific to the unit type.



---------- usage ------------------
systemctl is the magic command for interacting with systemd


'systemctl' - list active units
'systemctl list-unit-files' - list unit files. Can add '--type=service' or similar type

A bunch of typical control commands including:
	'systemctl start SERVICE', 'systemctl stop SERVICE', 'systemctl restart SERVICE', 'systemctl status SERVICE',

